// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/Models/Packets/loaded_song.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "protobuf/Models/preview_beatmap_level.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto_metadata_getter(int index);
namespace TournamentAssistantShared {
namespace Models {
namespace Packets {
class LoadedSong;
struct LoadedSongDefaultTypeInternal;
extern LoadedSongDefaultTypeInternal _LoadedSong_default_instance_;
}  // namespace Packets
}  // namespace Models
}  // namespace TournamentAssistantShared
PROTOBUF_NAMESPACE_OPEN
template<> ::TournamentAssistantShared::Models::Packets::LoadedSong* Arena::CreateMaybeMessage<::TournamentAssistantShared::Models::Packets::LoadedSong>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TournamentAssistantShared {
namespace Models {
namespace Packets {

// ===================================================================

class LoadedSong PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TournamentAssistantShared.Models.Packets.LoadedSong) */ {
 public:
  inline LoadedSong() : LoadedSong(nullptr) {}
  virtual ~LoadedSong();
  explicit constexpr LoadedSong(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LoadedSong(const LoadedSong& from);
  LoadedSong(LoadedSong&& from) noexcept
    : LoadedSong() {
    *this = ::std::move(from);
  }

  inline LoadedSong& operator=(const LoadedSong& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadedSong& operator=(LoadedSong&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadedSong& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadedSong* internal_default_instance() {
    return reinterpret_cast<const LoadedSong*>(
               &_LoadedSong_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LoadedSong& a, LoadedSong& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadedSong* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadedSong* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadedSong* New() const final {
    return CreateMaybeMessage<LoadedSong>(nullptr);
  }

  LoadedSong* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadedSong>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadedSong& from);
  void MergeFrom(const LoadedSong& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadedSong* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TournamentAssistantShared.Models.Packets.LoadedSong";
  }
  protected:
  explicit LoadedSong(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelFieldNumber = 1,
  };
  // .TournamentAssistantShared.Models.PreviewBeatmapLevel level = 1;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  const ::TournamentAssistantShared::Models::PreviewBeatmapLevel& level() const;
  ::TournamentAssistantShared::Models::PreviewBeatmapLevel* release_level();
  ::TournamentAssistantShared::Models::PreviewBeatmapLevel* mutable_level();
  void set_allocated_level(::TournamentAssistantShared::Models::PreviewBeatmapLevel* level);
  private:
  const ::TournamentAssistantShared::Models::PreviewBeatmapLevel& _internal_level() const;
  ::TournamentAssistantShared::Models::PreviewBeatmapLevel* _internal_mutable_level();
  public:
  void unsafe_arena_set_allocated_level(
      ::TournamentAssistantShared::Models::PreviewBeatmapLevel* level);
  ::TournamentAssistantShared::Models::PreviewBeatmapLevel* unsafe_arena_release_level();

  // @@protoc_insertion_point(class_scope:TournamentAssistantShared.Models.Packets.LoadedSong)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::TournamentAssistantShared::Models::PreviewBeatmapLevel* level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoadedSong

// .TournamentAssistantShared.Models.PreviewBeatmapLevel level = 1;
inline bool LoadedSong::_internal_has_level() const {
  return this != internal_default_instance() && level_ != nullptr;
}
inline bool LoadedSong::has_level() const {
  return _internal_has_level();
}
inline const ::TournamentAssistantShared::Models::PreviewBeatmapLevel& LoadedSong::_internal_level() const {
  const ::TournamentAssistantShared::Models::PreviewBeatmapLevel* p = level_;
  return p != nullptr ? *p : reinterpret_cast<const ::TournamentAssistantShared::Models::PreviewBeatmapLevel&>(
      ::TournamentAssistantShared::Models::_PreviewBeatmapLevel_default_instance_);
}
inline const ::TournamentAssistantShared::Models::PreviewBeatmapLevel& LoadedSong::level() const {
  // @@protoc_insertion_point(field_get:TournamentAssistantShared.Models.Packets.LoadedSong.level)
  return _internal_level();
}
inline void LoadedSong::unsafe_arena_set_allocated_level(
    ::TournamentAssistantShared::Models::PreviewBeatmapLevel* level) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(level_);
  }
  level_ = level;
  if (level) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TournamentAssistantShared.Models.Packets.LoadedSong.level)
}
inline ::TournamentAssistantShared::Models::PreviewBeatmapLevel* LoadedSong::release_level() {
  
  ::TournamentAssistantShared::Models::PreviewBeatmapLevel* temp = level_;
  level_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TournamentAssistantShared::Models::PreviewBeatmapLevel* LoadedSong::unsafe_arena_release_level() {
  // @@protoc_insertion_point(field_release:TournamentAssistantShared.Models.Packets.LoadedSong.level)
  
  ::TournamentAssistantShared::Models::PreviewBeatmapLevel* temp = level_;
  level_ = nullptr;
  return temp;
}
inline ::TournamentAssistantShared::Models::PreviewBeatmapLevel* LoadedSong::_internal_mutable_level() {
  
  if (level_ == nullptr) {
    auto* p = CreateMaybeMessage<::TournamentAssistantShared::Models::PreviewBeatmapLevel>(GetArena());
    level_ = p;
  }
  return level_;
}
inline ::TournamentAssistantShared::Models::PreviewBeatmapLevel* LoadedSong::mutable_level() {
  // @@protoc_insertion_point(field_mutable:TournamentAssistantShared.Models.Packets.LoadedSong.level)
  return _internal_mutable_level();
}
inline void LoadedSong::set_allocated_level(::TournamentAssistantShared::Models::PreviewBeatmapLevel* level) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(level_);
  }
  if (level) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(level)->GetArena();
    if (message_arena != submessage_arena) {
      level = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, level, submessage_arena);
    }
    
  } else {
    
  }
  level_ = level;
  // @@protoc_insertion_point(field_set_allocated:TournamentAssistantShared.Models.Packets.LoadedSong.level)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Packets
}  // namespace Models
}  // namespace TournamentAssistantShared

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protobuf_2fModels_2fPackets_2floaded_5fsong_2eproto
