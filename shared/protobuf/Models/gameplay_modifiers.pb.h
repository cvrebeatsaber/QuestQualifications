// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/Models/gameplay_modifiers.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto_metadata_getter(int index);
namespace TournamentAssistantShared {
namespace Models {
class GameplayModifiers;
struct GameplayModifiersDefaultTypeInternal;
extern GameplayModifiersDefaultTypeInternal _GameplayModifiers_default_instance_;
}  // namespace Models
}  // namespace TournamentAssistantShared
PROTOBUF_NAMESPACE_OPEN
template<> ::TournamentAssistantShared::Models::GameplayModifiers* Arena::CreateMaybeMessage<::TournamentAssistantShared::Models::GameplayModifiers>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TournamentAssistantShared {
namespace Models {

enum GameplayModifiers_GameOptions : int {
  GameplayModifiers_GameOptions_None = 0,
  GameplayModifiers_GameOptions_NoFail = 1,
  GameplayModifiers_GameOptions_NoBombs = 2,
  GameplayModifiers_GameOptions_NoArrows = 4,
  GameplayModifiers_GameOptions_NoObstacles = 8,
  GameplayModifiers_GameOptions_SlowSong = 16,
  GameplayModifiers_GameOptions_InstaFail = 32,
  GameplayModifiers_GameOptions_FailOnClash = 64,
  GameplayModifiers_GameOptions_BatteryEnergy = 128,
  GameplayModifiers_GameOptions_FastNotes = 256,
  GameplayModifiers_GameOptions_FastSong = 512,
  GameplayModifiers_GameOptions_DisappearingArrows = 1024,
  GameplayModifiers_GameOptions_GhostNotes = 2048,
  GameplayModifiers_GameOptions_DemoNoFail = 4096,
  GameplayModifiers_GameOptions_DemoNoObstacles = 8192,
  GameplayModifiers_GameOptions_StrictAngles = 16384,
  GameplayModifiers_GameOptions_ProMode = 32768,
  GameplayModifiers_GameOptions_ZenMode = 65536,
  GameplayModifiers_GameOptions_SmallCubes = 131072,
  GameplayModifiers_GameOptions_SuperFastSong = 262144,
  GameplayModifiers_GameOptions_GameplayModifiers_GameOptions_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GameplayModifiers_GameOptions_GameplayModifiers_GameOptions_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GameplayModifiers_GameOptions_IsValid(int value);
constexpr GameplayModifiers_GameOptions GameplayModifiers_GameOptions_GameOptions_MIN = GameplayModifiers_GameOptions_None;
constexpr GameplayModifiers_GameOptions GameplayModifiers_GameOptions_GameOptions_MAX = GameplayModifiers_GameOptions_SuperFastSong;
constexpr int GameplayModifiers_GameOptions_GameOptions_ARRAYSIZE = GameplayModifiers_GameOptions_GameOptions_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GameplayModifiers_GameOptions_descriptor();
template<typename T>
inline const std::string& GameplayModifiers_GameOptions_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GameplayModifiers_GameOptions>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GameplayModifiers_GameOptions_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GameplayModifiers_GameOptions_descriptor(), enum_t_value);
}
inline bool GameplayModifiers_GameOptions_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GameplayModifiers_GameOptions* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GameplayModifiers_GameOptions>(
    GameplayModifiers_GameOptions_descriptor(), name, value);
}
// ===================================================================

class GameplayModifiers PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TournamentAssistantShared.Models.GameplayModifiers) */ {
 public:
  inline GameplayModifiers() : GameplayModifiers(nullptr) {}
  virtual ~GameplayModifiers();
  explicit constexpr GameplayModifiers(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GameplayModifiers(const GameplayModifiers& from);
  GameplayModifiers(GameplayModifiers&& from) noexcept
    : GameplayModifiers() {
    *this = ::std::move(from);
  }

  inline GameplayModifiers& operator=(const GameplayModifiers& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameplayModifiers& operator=(GameplayModifiers&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GameplayModifiers& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameplayModifiers* internal_default_instance() {
    return reinterpret_cast<const GameplayModifiers*>(
               &_GameplayModifiers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GameplayModifiers& a, GameplayModifiers& b) {
    a.Swap(&b);
  }
  inline void Swap(GameplayModifiers* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameplayModifiers* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GameplayModifiers* New() const final {
    return CreateMaybeMessage<GameplayModifiers>(nullptr);
  }

  GameplayModifiers* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GameplayModifiers>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GameplayModifiers& from);
  void MergeFrom(const GameplayModifiers& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameplayModifiers* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TournamentAssistantShared.Models.GameplayModifiers";
  }
  protected:
  explicit GameplayModifiers(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef GameplayModifiers_GameOptions GameOptions;
  static constexpr GameOptions None =
    GameplayModifiers_GameOptions_None;
  static constexpr GameOptions NoFail =
    GameplayModifiers_GameOptions_NoFail;
  static constexpr GameOptions NoBombs =
    GameplayModifiers_GameOptions_NoBombs;
  static constexpr GameOptions NoArrows =
    GameplayModifiers_GameOptions_NoArrows;
  static constexpr GameOptions NoObstacles =
    GameplayModifiers_GameOptions_NoObstacles;
  static constexpr GameOptions SlowSong =
    GameplayModifiers_GameOptions_SlowSong;
  static constexpr GameOptions InstaFail =
    GameplayModifiers_GameOptions_InstaFail;
  static constexpr GameOptions FailOnClash =
    GameplayModifiers_GameOptions_FailOnClash;
  static constexpr GameOptions BatteryEnergy =
    GameplayModifiers_GameOptions_BatteryEnergy;
  static constexpr GameOptions FastNotes =
    GameplayModifiers_GameOptions_FastNotes;
  static constexpr GameOptions FastSong =
    GameplayModifiers_GameOptions_FastSong;
  static constexpr GameOptions DisappearingArrows =
    GameplayModifiers_GameOptions_DisappearingArrows;
  static constexpr GameOptions GhostNotes =
    GameplayModifiers_GameOptions_GhostNotes;
  static constexpr GameOptions DemoNoFail =
    GameplayModifiers_GameOptions_DemoNoFail;
  static constexpr GameOptions DemoNoObstacles =
    GameplayModifiers_GameOptions_DemoNoObstacles;
  static constexpr GameOptions StrictAngles =
    GameplayModifiers_GameOptions_StrictAngles;
  static constexpr GameOptions ProMode =
    GameplayModifiers_GameOptions_ProMode;
  static constexpr GameOptions ZenMode =
    GameplayModifiers_GameOptions_ZenMode;
  static constexpr GameOptions SmallCubes =
    GameplayModifiers_GameOptions_SmallCubes;
  static constexpr GameOptions SuperFastSong =
    GameplayModifiers_GameOptions_SuperFastSong;
  static inline bool GameOptions_IsValid(int value) {
    return GameplayModifiers_GameOptions_IsValid(value);
  }
  static constexpr GameOptions GameOptions_MIN =
    GameplayModifiers_GameOptions_GameOptions_MIN;
  static constexpr GameOptions GameOptions_MAX =
    GameplayModifiers_GameOptions_GameOptions_MAX;
  static constexpr int GameOptions_ARRAYSIZE =
    GameplayModifiers_GameOptions_GameOptions_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  GameOptions_descriptor() {
    return GameplayModifiers_GameOptions_descriptor();
  }
  template<typename T>
  static inline const std::string& GameOptions_Name(T enum_t_value) {
    static_assert(::std::is_same<T, GameOptions>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function GameOptions_Name.");
    return GameplayModifiers_GameOptions_Name(enum_t_value);
  }
  static inline bool GameOptions_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      GameOptions* value) {
    return GameplayModifiers_GameOptions_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
  };
  // .TournamentAssistantShared.Models.GameplayModifiers.GameOptions options = 1;
  void clear_options();
  ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions options() const;
  void set_options(::TournamentAssistantShared::Models::GameplayModifiers_GameOptions value);
  private:
  ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions _internal_options() const;
  void _internal_set_options(::TournamentAssistantShared::Models::GameplayModifiers_GameOptions value);
  public:

  // @@protoc_insertion_point(class_scope:TournamentAssistantShared.Models.GameplayModifiers)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int options_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GameplayModifiers

// .TournamentAssistantShared.Models.GameplayModifiers.GameOptions options = 1;
inline void GameplayModifiers::clear_options() {
  options_ = 0;
}
inline ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions GameplayModifiers::_internal_options() const {
  return static_cast< ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions >(options_);
}
inline ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions GameplayModifiers::options() const {
  // @@protoc_insertion_point(field_get:TournamentAssistantShared.Models.GameplayModifiers.options)
  return _internal_options();
}
inline void GameplayModifiers::_internal_set_options(::TournamentAssistantShared::Models::GameplayModifiers_GameOptions value) {
  
  options_ = value;
}
inline void GameplayModifiers::set_options(::TournamentAssistantShared::Models::GameplayModifiers_GameOptions value) {
  _internal_set_options(value);
  // @@protoc_insertion_point(field_set:TournamentAssistantShared.Models.GameplayModifiers.options)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Models
}  // namespace TournamentAssistantShared

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions>() {
  return ::TournamentAssistantShared::Models::GameplayModifiers_GameOptions_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protobuf_2fModels_2fgameplay_5fmodifiers_2eproto
